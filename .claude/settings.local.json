{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(timeout 10 npm start)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(grep:*)",
      "Bash(npm test:*)",
      "Bash(npm run typecheck:*)",
      "Bash(rm:*)",
      "Bash(timeout 15 npm test -- --testTimeout=10000 --maxWorkers=1)",
      "Bash(npx jest:*)",
      "Bash(node:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(mkdir:*)",
      "Bash(npm run demo:run:*)",
      "Bash(npm run demo:investor:*)",
      "Bash(npm start)",
      "Bash(npx kill-port:*)",
      "Bash(curl:*)",
      "WebFetch(domain:cainmani.com)",
      "Bash(taskkill:*)",
      "Bash(cmd //c:*)",
      "Bash(ls:*)",
      "Bash(pg_isready:*)",
      "Bash(npx prisma:*)",
      "Bash(pkill:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run test:*)",
      "Bash(cmd /c:*)",
      "Bash(powershell:*)",
      "Bash(find:*)",
      "Bash(git push:*)",
      "Bash(cp:*)",
      "Bash(cmake:*)",
      "Bash(git clone:*)",
      "Bash(npx ts-node:*)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe\" liboqs.sln /p:Configuration=Release /m:4)",
      "Bash(msbuild:*)",
      "Bash(\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\\MSBuild.exe\" liboqs.sln -p:Configuration=Release -p:Platform=x64)",
      "Bash(\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\\MSBuild.exe\" srcoqs.vcxproj -p:Configuration=Release -p:Platform=x64)",
      "Bash(\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\\MSBuild.exe\" src/oqs.vcxproj -p:Configuration=Release -p:Platform=x64)",
      "Bash(npm run dev:*)",
      "Bash(touch:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run start:prod:*)",
      "Bash(tsc:*)",
      "Bash(timeout 10 npm run start:prod)",
      "WebFetch(domain:bundlejs.com)",
      "WebFetch(domain:bundlephobia.com)",
      "Bash(npm run:*)",
      "WebFetch(domain:api.quankey.xyz)",
      "Bash(psql:*)",
      "Bash(chmod:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(./scripts/validate-production-ready.sh:*)",
      "Bash(bash:*)",
      "Bash(cat:*)",
      "Bash(../scripts/validate-security.sh:*)",
      "Bash(NODE_ENV=test npx jest src/tests/basic.security.test.ts --verbose --no-coverage)",
      "Bash(NODE_ENV=test npx jest src/tests/basic.security.test.ts --no-coverage --verbose --passWithNoTests)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(NODE_ENV=test npm run test:security --silent)",
      "Bash(if grep -r \"simulation\\|mock.*quantum\" backend/src --include=\"*.ts\")",
      "Bash(then echo \"❌ TODAVÍA HAY CÓDIGO FALSO\")",
      "Bash(else echo \"✅ Código quantum limpio\")",
      "Bash(fi)",
      "Bash(set NODE_ENV=test)",
      "Bash(NODE_ENV=test DB_ENCRYPTION_KEY=\"87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a\" npm test src/tests/quantum.test.ts -- --no-coverage)",
      "Bash(NODE_ENV=test DB_ENCRYPTION_KEY=\"87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a\" JWT_PUBLIC_KEY=\"MCowBQYDK2VwAyEAEQVI2Ronbx8S4X5HTsoq1FKiEBSztiyTi5SuLqyomxM=\" JWT_PRIVATE_KEY=\"MC4CAQAwBQYDK2VwBCIEICeBFhpu4ZT9Te1JS+jeRiChHUoWeEDcxq4Xjv8/2TuX\" DATABASE_URL=\"postgresql://username:password@localhost:5432/quankey_test?sslmode=require\" timeout 10 npx ts-node src/server.secure.ts)",
      "Bash(npm audit:*)",
      "Bash(NODE_ENV=test DB_ENCRYPTION_KEY=\"87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a\" npm test src/tests/security.comprehensive.test.ts -- --no-coverage --verbose)",
      "Bash(NODE_ENV=test DB_ENCRYPTION_KEY=\"87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a87d730491dd45bca1f557b8dede3e0dec86c8f85b5b47aeddf42f798eb6e356a\" npm test src/tests/security.comprehensive.test.ts -- --no-coverage --testNamePattern=\"should block (SQL injection|command injection)\")",
      "Bash(sudo tail:*)",
      "Bash(timeout 5 npm start)",
      "Bash(timeout 15 npm start)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(NODE_ENV=test npm test src/tests/security.comprehensive.test.ts --no-coverage --silent)",
      "Bash(git fetch:*)",
      "Bash(npm search:*)",
      "Bash(CI=false npm run build)",
      "Bash(CI=true npm run build)",
      "Bash(git checkout:*)"
    ],
    "deny": []
  }
}